// Code generated by protoc-gen-go. DO NOT EDIT.
// source: structs/serving_data.proto

package structs

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ProductScoredList struct {
	ProductIds []uint64  `protobuf:"varint,1,rep,packed,name=product_ids,json=productIds" json:"product_ids,omitempty"`
	Scores     []float32 `protobuf:"fixed32,2,rep,packed,name=scores" json:"scores,omitempty"`
}

func (m *ProductScoredList) Reset()                    { *m = ProductScoredList{} }
func (m *ProductScoredList) String() string            { return proto.CompactTextString(m) }
func (*ProductScoredList) ProtoMessage()               {}
func (*ProductScoredList) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *ProductScoredList) GetProductIds() []uint64 {
	if m != nil {
		return m.ProductIds
	}
	return nil
}

func (m *ProductScoredList) GetScores() []float32 {
	if m != nil {
		return m.Scores
	}
	return nil
}

type ProductSortedPreferences struct {
	Products map[uint64]*ProductScoredList `protobuf:"bytes,1,rep,name=products" json:"products,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ProductSortedPreferences) Reset()                    { *m = ProductSortedPreferences{} }
func (m *ProductSortedPreferences) String() string            { return proto.CompactTextString(m) }
func (*ProductSortedPreferences) ProtoMessage()               {}
func (*ProductSortedPreferences) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *ProductSortedPreferences) GetProducts() map[uint64]*ProductScoredList {
	if m != nil {
		return m.Products
	}
	return nil
}

type ServingData struct {
	PreferencesMap map[string]*ProductSortedPreferences `protobuf:"bytes,1,rep,name=preferencesMap" json:"preferencesMap,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Products       map[uint64]*Product                  `protobuf:"bytes,2,rep,name=products" json:"products,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ServingData) Reset()                    { *m = ServingData{} }
func (m *ServingData) String() string            { return proto.CompactTextString(m) }
func (*ServingData) ProtoMessage()               {}
func (*ServingData) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

func (m *ServingData) GetPreferencesMap() map[string]*ProductSortedPreferences {
	if m != nil {
		return m.PreferencesMap
	}
	return nil
}

func (m *ServingData) GetProducts() map[uint64]*Product {
	if m != nil {
		return m.Products
	}
	return nil
}

func init() {
	proto.RegisterType((*ProductScoredList)(nil), "structs.ProductScoredList")
	proto.RegisterType((*ProductSortedPreferences)(nil), "structs.ProductSortedPreferences")
	proto.RegisterType((*ServingData)(nil), "structs.ServingData")
}

func init() { proto.RegisterFile("structs/serving_data.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 311 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0x41, 0x4b, 0xc3, 0x30,
	0x18, 0x86, 0x49, 0x36, 0xa7, 0x7e, 0x45, 0x99, 0x11, 0xa4, 0xf4, 0x62, 0xed, 0x41, 0x7a, 0xea,
	0x64, 0x1e, 0x14, 0x0f, 0x9e, 0xf4, 0x20, 0x6e, 0x50, 0xba, 0x83, 0x47, 0x89, 0x4d, 0x94, 0xa2,
	0x34, 0x25, 0x49, 0x07, 0xfb, 0x77, 0xfe, 0x08, 0x7f, 0x90, 0x6c, 0x49, 0x6b, 0x3a, 0x37, 0x76,
	0x6b, 0xf3, 0xbd, 0x79, 0xf2, 0xe6, 0x21, 0x10, 0x28, 0x2d, 0xeb, 0x5c, 0xab, 0x91, 0xe2, 0x72,
	0x5e, 0x94, 0x1f, 0xaf, 0x8c, 0x6a, 0x9a, 0x54, 0x52, 0x68, 0x41, 0xf6, 0xed, 0x2c, 0x68, 0x43,
	0x95, 0x14, 0xac, 0xce, 0xb5, 0x13, 0x8a, 0x26, 0x70, 0x92, 0x9a, 0xd5, 0x59, 0x2e, 0x24, 0x67,
	0x93, 0x42, 0x69, 0x72, 0x0e, 0x5e, 0x13, 0x2d, 0x98, 0xf2, 0x51, 0xd8, 0x8b, 0xfb, 0x19, 0xd8,
	0xa5, 0x27, 0xa6, 0xc8, 0x19, 0x0c, 0xd4, 0x32, 0xae, 0x7c, 0x1c, 0xf6, 0x62, 0x9c, 0xd9, 0xbf,
	0xe8, 0x1b, 0x81, 0xdf, 0xe0, 0x84, 0xd4, 0x9c, 0xa5, 0x92, 0xbf, 0x73, 0xc9, 0xcb, 0x9c, 0x2b,
	0xf2, 0x0c, 0x07, 0x16, 0x61, 0x90, 0xde, 0x78, 0x94, 0xd8, 0x66, 0xc9, 0xb6, 0x4d, 0xcd, 0x40,
	0x3d, 0x96, 0x5a, 0x2e, 0xb2, 0x16, 0x10, 0xbc, 0xc0, 0x51, 0x67, 0x44, 0x86, 0xd0, 0xfb, 0xe4,
	0x0b, 0x1f, 0x85, 0x28, 0xee, 0x67, 0xcb, 0x4f, 0x72, 0x05, 0x7b, 0x73, 0xfa, 0x55, 0x73, 0x1f,
	0x87, 0x28, 0xf6, 0xc6, 0xc1, 0xbf, 0xc3, 0xda, 0x0b, 0x67, 0x26, 0x78, 0x87, 0x6f, 0x51, 0xf4,
	0x83, 0xc1, 0x9b, 0x19, 0x99, 0x0f, 0x54, 0x53, 0x92, 0xc2, 0x71, 0xf5, 0xd7, 0x67, 0x4a, 0x2b,
	0xdb, 0x3d, 0x6e, 0x71, 0x4e, 0x3a, 0x49, 0x3b, 0x51, 0x53, 0x7a, 0x6d, 0x3f, 0xb9, 0x77, 0x3c,
	0xe0, 0x15, 0x2b, 0xda, 0xc2, 0xda, 0x7c, 0x75, 0x06, 0xa7, 0x1b, 0x8e, 0x71, 0x05, 0x1c, 0x1a,
	0x01, 0x37, 0x5d, 0x01, 0x17, 0x3b, 0x6d, 0x3b, 0x1e, 0x82, 0xe9, 0x6e, 0xc1, 0x97, 0x5d, 0xfe,
	0x70, 0x9d, 0xef, 0xe0, 0xde, 0x06, 0xab, 0xe7, 0x76, 0xfd, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xe9,
	0xcc, 0xe9, 0xce, 0xb1, 0x02, 0x00, 0x00,
}
